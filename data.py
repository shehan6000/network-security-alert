import pandas as pd
import numpy as np

# Define the number of records you want to generate
num_records = 1000

# Generate random data for each column
data = {
    'Destination Port': np.random.randint(0, 65535, num_records),
    'Flow Duration': np.random.randint(1, 100000, num_records),
    'Total Fwd Packets': np.random.randint(1, 1000, num_records),
    'Total Backward Packets': np.random.randint(1, 1000, num_records),
    'Total Length of Fwd Packets': np.random.uniform(0, 65535, num_records),
    'Total Length of Bwd Packets': np.random.uniform(0, 65535, num_records),
    'Fwd Packet Length Max': np.random.uniform(0, 1500, num_records),
    'Fwd Packet Length Min': np.random.uniform(0, 1500, num_records),
    'Fwd Packet Length Mean': np.random.uniform(0, 1500, num_records),
    'Fwd Packet Length Std': np.random.uniform(0, 500, num_records),
    'Bwd Packet Length Max': np.random.uniform(0, 1500, num_records),
    'Bwd Packet Length Min': np.random.uniform(0, 1500, num_records),
    'Bwd Packet Length Mean': np.random.uniform(0, 1500, num_records),
    'Bwd Packet Length Std': np.random.uniform(0, 500, num_records),
    'Flow Bytes/s': np.random.uniform(0, 1e6, num_records),
    'Flow Packets/s': np.random.uniform(0, 1e6, num_records),
    'Flow IAT Mean': np.random.uniform(0, 1e6, num_records),
    'Flow IAT Std': np.random.uniform(0, 1e6, num_records),
    'Flow IAT Max': np.random.uniform(0, 1e6, num_records),
    'Flow IAT Min': np.random.uniform(0, 1e6, num_records),
    'Fwd IAT Total': np.random.uniform(0, 1e6, num_records),
    'Fwd IAT Mean': np.random.uniform(0, 1e6, num_records),
    'Fwd IAT Std': np.random.uniform(0, 1e6, num_records),
    'Fwd IAT Max': np.random.uniform(0, 1e6, num_records),
    'Fwd IAT Min': np.random.uniform(0, 1e6, num_records),
    'Bwd IAT Total': np.random.uniform(0, 1e6, num_records),
    'Bwd IAT Mean': np.random.uniform(0, 1e6, num_records),
    'Bwd IAT Std': np.random.uniform(0, 1e6, num_records),
    'Bwd IAT Max': np.random.uniform(0, 1e6, num_records),
    'Bwd IAT Min': np.random.uniform(0, 1e6, num_records),
    'Fwd PSH Flags': np.random.randint(0, 2, num_records),
    'Bwd PSH Flags': np.random.randint(0, 2, num_records),
    'Fwd URG Flags': np.random.randint(0, 2, num_records),
    'Bwd URG Flags': np.random.randint(0, 2, num_records),
    'Fwd Header Length': np.random.randint(0, 1500, num_records),
    'Bwd Header Length': np.random.randint(0, 1500, num_records),
    'Fwd Packets/s': np.random.uniform(0, 1e6, num_records),
    'Bwd Packets/s': np.random.uniform(0, 1e6, num_records),
    'Min Packet Length': np.random.uniform(0, 1500, num_records),
    'Max Packet Length': np.random.uniform(0, 1500, num_records),
    'Packet Length Mean': np.random.uniform(0, 1500, num_records),
    'Packet Length Std': np.random.uniform(0, 500, num_records),
    'Packet Length Variance': np.random.uniform(0, 500, num_records),
    'FIN Flag Count': np.random.randint(0, 2, num_records),
    'SYN Flag Count': np.random.randint(0, 2, num_records),
    'RST Flag Count': np.random.randint(0, 2, num_records),
    'PSH Flag Count': np.random.randint(0, 2, num_records),
    'ACK Flag Count': np.random.randint(0, 2, num_records),
    'URG Flag Count': np.random.randint(0, 2, num_records),
    'CWE Flag Count': np.random.randint(0, 2, num_records),
    'ECE Flag Count': np.random.randint(0, 2, num_records),
    'Down/Up Ratio': np.random.uniform(0, 10, num_records),
    'Average Packet Size': np.random.uniform(0, 1500, num_records),
    'Avg Fwd Segment Size': np.random.uniform(0, 1500, num_records),
    'Avg Bwd Segment Size': np.random.uniform(0, 1500, num_records),
    'Fwd Header Length.1': np.random.randint(0, 1500, num_records),
    'Fwd Avg Bytes/Bulk': np.random.uniform(0, 1e6, num_records),
    'Fwd Avg Packets/Bulk': np.random.uniform(0, 1e6, num_records),
    'Fwd Avg Bulk Rate': np.random.uniform(0, 1e6, num_records),
    'Bwd Avg Bytes/Bulk': np.random.uniform(0, 1e6, num_records),
    'Bwd Avg Packets/Bulk': np.random.uniform(0, 1e6, num_records),
    'Bwd Avg Bulk Rate': np.random.uniform(0, 1e6, num_records),
    'Subflow Fwd Packets': np.random.randint(0, 1000, num_records),
    'Subflow Fwd Bytes': np.random.uniform(0, 1e6, num_records),
    'Subflow Bwd Packets': np.random.randint(0, 1000, num_records),
    'Subflow Bwd Bytes': np.random.uniform(0, 1e6, num_records),
    'Init_Win_bytes_forward': np.random.uniform(0, 65535, num_records),
    'Init_Win_bytes_backward': np.random.uniform(0, 65535, num_records),
    'act_data_pkt_fwd': np.random.randint(0, 1000, num_records),
    'min_seg_size_forward': np.random.randint(0, 1500, num_records),
    'Active Mean': np.random.uniform(0, 1e6, num_records),
    'Active Std': np.random.uniform(0, 1e6, num_records),
    'Active Max': np.random.uniform(0, 1e6, num_records),
    'Active Min': np.random.uniform(0, 1e6, num_records),
    'Idle Mean': np.random.uniform(0, 1e6, num_records),
    'Idle Std': np.random.uniform(0, 1e6, num_records),
    'Idle Max': np.random.uniform(0, 1e6, num_records),
    'Idle Min': np.random.uniform(0, 1e6, num_records),
    'Label': np.random.choice(['BENIGN', 'MALICIOUS'], num_records)
}

# Create a DataFrame
df = pd.DataFrame(data)

# Save DataFrame to CSV
df.to_csv('simulated_cicids2017.csv', index=False)

print("CSV file generated successfully.")
